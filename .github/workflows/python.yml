name: 🐍 Bindings

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-bindings:
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.os == 'ubuntu-latest' && 'fedora:38' || null }}

    name: "🐍 Test Bindings on ${{ matrix.os }}"

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🖥️ Setup Environment
        uses: ./.github/actions/setup
        with:
          container: ${{ matrix.os }}
          install-vtk: false

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 🦥 Cache Dependencies
        uses: actions/cache@v4
        with:
          key: python-${{ matrix.os }}
          path: build

      - name: 🐍 Build and check Python Module (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python -m venv venv
          ./venv/Scripts/activate.bat
          pip install .
          python -c "import viennals2d; print(viennals2d.__doc__)"

      - name: 🐍 Build and check Python Module (Other)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m venv venv
          ./venv/bin/pip install .
          ./venv/bin/python -c "import viennals2d; print(viennals2d.__doc__)"

      - name: 📦 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pre-Built (${{ matrix.os }})
          path: venv

  package:
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.os == 'ubuntu-latest' && 'fedora:38' || null }}

    name: "🐍 Package Bindings on ${{ matrix.os }}"

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🖥️ Setup Environment
        uses: ./.github/actions/setup
        with:
          container: ${{ matrix.os }}
          install-vtk: false

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 🛞 CIBuildWheel
        run: python -m pip install cibuildwheel==2.17.0

      - name: 🛠️ Build VTK (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON"/g' pyproject.toml

      - name: 🛠️ Build VTK (MacOs)
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' }}
        run: |
          sed -i .bak 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON"/g' pyproject.toml
          cat pyproject.toml

      - name: 🛠️ Use VTK-Python Libs
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          # sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_VTK_PYTHON_LIBS=ON"/g' pyproject.toml
          sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON"/g' pyproject.toml
          cat pyproject.toml

      - name: 🏗️ Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-*"
          CIBW_ARCHS_WINDOWS: auto64

      - name: 📦 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
